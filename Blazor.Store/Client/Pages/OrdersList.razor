@page "/"
@inject IOrderService OrderService
@inject NavigationManager NavigationManager

<p>@Message</p>

@if (Orders != null && Orders.Any())
{
     <MudTable Items="@Orders" Hover="true" Breakpoint="Breakpoint.Sm">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Orders</MudText>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Number</MudTh>
            <MudTh>Client</MudTh>
            <MudTh>Total</MudTh>
            <MudTh>Order Date</MudTh>
            <MudTh>Delivery Date</MudTh>
            <MudTh></MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate Context="OrderContext">
            <MudTd DataLabel="Number">@OrderContext.OrderNumber</MudTd>
            <MudTd DataLabel="Client">@OrderContext.ClientName</MudTd>
            <MudTd DataLabel="Total">@OrderContext.Total.ToString("C")</MudTd>
            <MudTd DataLabel="Order Date">@OrderContext.OrderDate</MudTd>
            <MudTd DataLabel="Delivery Date">@OrderContext.DeliveryDate</MudTd>
            <MudTd DataLabel="">
                <MudFab OnClick="@(() => Edit(OrderContext.Id))"
                        Color="Color.Primary"
                        Icon="@Icons.Material.Filled.Edit"
                        Size="Size.Small"
                        IconSize="Size.Small">
                </MudFab>
            </MudTd>
        
        </RowTemplate>
     </MudTable>
}


@code {

    public List<Order> Orders;
    public string Message { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            Orders = (List<Order>)await OrderService.GetAll();
        }
        catch (Exception e)
        {

            Message = "Error... " + e.Message;
        }
    }

    protected async Task Edit(int id)
    {
        NavigationManager.NavigateTo($"/orderdetails/{id}");
    }



}

